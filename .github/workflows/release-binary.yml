name: Binary Release

on:
  release:
    types: [created]
  push:
    branches:
      - master

# Add permissions block
permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: clipper-server-linux
          - os: windows-latest
            artifact_name: clipper-server-windows
          - os: macos-latest
            artifact_name: clipper-server-macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          check-latest: true

      - name: Get dependencies
        run: go mod download

      - name: Get version
        id: get_version
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "VERSION=dev-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
          fi

      - name: Build
        run: go build -v -o clipper-server ./cmd/clipper-server

      - name: Create binary directory
        run: mkdir -p dist/binary

      - name: Package binary (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "Current directory: $PWD"
          Write-Host "Listing current directory contents:"
          Get-ChildItem
          Write-Host "Checking if clipper-server.exe exists:"
          Test-Path "clipper-server.exe"
          $exePath = Join-Path $PWD "clipper-server.exe"
          Write-Host "Full path to exe: $exePath"
          Write-Host "Checking if full path exists:"
          Test-Path $exePath
          Write-Host "Creating zip file..."
          Compress-Archive -Path $exePath -DestinationPath "dist/binary/${{ matrix.artifact_name }}-${{ env.VERSION }}.zip" -Force
          Write-Host "Zip file created. Contents of dist/binary:"
          Get-ChildItem "dist/binary"

      - name: Package binary (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          tar -czf dist/binary/${{ matrix.artifact_name }}-${{ env.VERSION }}.tar.gz clipper-server

      - name: Upload to Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/binary/${{ matrix.artifact_name }}-${{ env.VERSION }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_name: ${{ matrix.artifact_name }}-${{ env.VERSION }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_content_type: ${{ matrix.os == 'windows-latest' && 'application/zip' || 'application/gzip' }}

      - name: Upload Build Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-${{ env.VERSION }}
          path: ./dist/binary/${{ matrix.artifact_name }}-${{ env.VERSION }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }} 